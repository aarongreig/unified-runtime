name: Nightly

on:
  schedule:
    # Run every day at 23:00 UTC
    - cron: '0 23 * * *'

permissions:
  contents: read

jobs:
  long-fuzz-test-hw:
    name: Run long fuzz tests
    if: github.repository == 'oneapi-src/unified-runtime'  # run only on upstream; forks won't have the HW
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [{c: clang, cxx: clang++}]

    runs-on: 'FUZZTESTS'

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Install pip packages
      run: pip install -r third_party/requirements.txt

    - name: Download DPC++
      run: |
        wget -O ${{github.workspace}}/dpcpp_compiler.tar.gz https://github.com/intel/llvm/releases/download/nightly-2024-01-29/sycl_linux.tar.gz
        mkdir dpcpp_compiler
        tar -xvf ${{github.workspace}}/dpcpp_compiler.tar.gz -C dpcpp_compiler

    - name: Build level zero
      run: |
        git clone -b v1.17.6 --depth=1 https://github.com/oneapi-src/level-zero.git ${{github.workspace}}/level-zero
        cd ${{github.workspace}}/level-zero
        cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
        cmake --build build -j $(nproc)

    - name: Configure CMake
      run: >
        cmake
        -B${{github.workspace}}/build
        -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
        -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
        -DUR_ENABLE_TRACING=ON
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DUR_BUILD_TESTS=ON
        -DUR_USE_ASAN=ON
        -DUR_USE_UBSAN=ON
        -DUR_BUILD_ADAPTER_L0=ON
        -DUR_LEVEL_ZERO_LOADER_LIBRARY=${{github.workspace}}/level-zero/build/lib/libze_loader.so
        -DUR_LEVEL_ZERO_INCLUDE_DIR=${{github.workspace}}/level-zero/include/
        -DUR_DPCXX=${{github.workspace}}/dpcpp_compiler/bin/clang++
        -DUR_SYCL_LIBRARY_DIR=${{github.workspace}}/dpcpp_compiler/lib

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build -j $(nproc)

    - name: Fuzz long test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}} --output-on-failure -L "fuzz-long" --verbose

    - name: Get information about platform
      if: ${{ always() }}
      run: .github/scripts/get_system_info.sh
